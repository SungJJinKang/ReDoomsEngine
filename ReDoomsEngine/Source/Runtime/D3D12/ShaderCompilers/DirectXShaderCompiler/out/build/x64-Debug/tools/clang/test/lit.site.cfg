import sys

## Autogenerated by LLVM/Clang configuration.
# Do not edit!
config.llvm_src_root = "$(SolutionDir)Source/Runtime/D3D12/ShaderCompilers/DirectXShaderCompiler"
config.llvm_obj_root = "$(SolutionDir)Source/Runtime/D3D12/ShaderCompilers/DirectXShaderCompiler/out/build/x64-Debug"
config.llvm_tools_dir = "$(SolutionDir)Source/Runtime/D3D12/ShaderCompilers/DirectXShaderCompiler/out/build/x64-Debug/./bin"
config.llvm_libs_dir = "$(SolutionDir)Source/Runtime/D3D12/ShaderCompilers/DirectXShaderCompiler/out/build/x64-Debug/./lib"
config.llvm_shlib_dir = "$(SolutionDir)Source/Runtime/D3D12/ShaderCompilers/DirectXShaderCompiler/out/build/x64-Debug/./bin"
config.llvm_plugin_ext = ".dll"
config.lit_tools_dir = ""
config.clang_obj_root = "$(SolutionDir)Source/Runtime/D3D12/ShaderCompilers/DirectXShaderCompiler/out/build/x64-Debug/tools/clang"
config.clang_tools_dir = "$(SolutionDir)Source/Runtime/D3D12/ShaderCompilers/DirectXShaderCompiler/out/build/x64-Debug/./bin"
config.host_triple = "x86_64-pc-win32"
config.target_triple = "dxil-ms-dx"
config.llvm_use_sanitizer = ""
config.clang_arcmt = 0
config.clang_staticanalyzer = 0
config.clang_examples = 0
config.enable_shared = 0
config.enable_backtrace = "1"
config.host_arch = "AMD64"
config.spirv = "ON" =="ON"

# Support substitution of the tools and libs dirs with user parameters. This is
# used when we can't determine the tool dir at configuration time.
try:
    config.clang_tools_dir = config.clang_tools_dir % lit_config.params
    config.llvm_tools_dir = config.llvm_tools_dir % lit_config.params
    config.llvm_shlib_dir = config.llvm_shlib_dir % lit_config.params
    config.llvm_libs_dir = config.llvm_libs_dir % lit_config.params
except KeyError:
    e = sys.exc_info()[1]
    key, = e.args
    lit_config.fatal("unable to find %r parameter, use '--param=%s=VALUE'" % (key,key))

# Let the main config do the real work.
lit_config.load_config(config, "$(SolutionDir)Source/Runtime/D3D12/ShaderCompilers/DirectXShaderCompiler/tools/clang/test/lit.cfg")
